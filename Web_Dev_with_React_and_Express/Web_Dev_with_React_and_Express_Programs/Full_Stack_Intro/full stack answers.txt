1.What is full stack web development? In your discussion include a
description of what a stack is?
Answer:
	Full stack web development is when a web developer can work on both the front and back ends of a web application
	with use of front-end languages such as HTML, CSS, and Javascript and back-end langauges such as Java,PHP, or Python.
	A full stack web developer should be skilled in doing UI creation, user experience and interaction, server and hosting
	environments and data modellng and manipulating.A stack is a term used to describea collection of technologies that are 
	used to crreate a web application. Examples of stacks are: -The LAMP stack uses Linux, Apache, MySQL, PHP to create 
								    web applications.
								   -The MEAN stack uses	MongoDB, Express, AngularJS & Node.js for 
                                                                    web development.
                                                                   -The MERN stack uses MongoDB, Express, React & Node.js for web 
                                                                    development.

2.What is the MERN stack?
Answer:
	Mern is stack like Mean with the exception of React replacing AngularJS due to Reacts popularity.
	Mern uses the technologies : MongoDB, Express, React & Node.js for web development.

3.What types of server functions are typically implemented for the
back-end of a web application? In your discussion explain the role of
each of these: web server, application server and proxy server.
Answer: 
        Web and Application servers are implemented on the back-end. 

	A web server is a computer with an internet connection and the necessary software 
	stored on it to have web pages available for the client-side. A web server contains 
	all the information needed to make a web page functional, like CSS, HTML and 
	JavaScript files. There is software needed to make a web server act as an HTTP 
	server, which is to recieve HTTP request like links and URLs and send out the specified 
	information that was requested, the web page.


	Application servers stores the code that is used to dynamically build resources that is sent
	to the browser. Application servers most times have a web framework that is used to
	match requests and push out responses.

	A proxy server is middle man server that retrieves resources and content from multiple
	clients requests to different servers. A reverse proxy server sits behind a firewall
	in private networks and sends client requests to the appropriate server allowing for
	a easier flow in getting requests and sending out data.	

4.What happens when a browser is used to send a request to a server?
How does this differ with SSR and CSR?
Answer:
	Users insert a URL or key words for a website in the search bar which sends the 
	information to the rendering engine. The rendering engine then retrieves the 
	information requested and begins to parse the files and images to be displayed on 
	the UI which will be the requested web page. 
	
	SSR takes JavaScript and executes it to a rendered static HTML and CSS on the server.
	This means that with SSR the page becomes viewable before downloading the JavaScript,
	but once it has been the page becomes interactable.
	
	CSR leaves the browser empty with JavaScript links. The	downloading and rendering
	of HTML and CSS happens concurrently with the downloading of JavaScript. Once the
	browser executes the JavaScript the page becomes viewable and interactable.

	The difference between SSR and CSR is that the loadout is different as with SSR you
	can see the page sooner while with CSR once the page is loaded it is interactable.
